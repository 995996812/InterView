1、说一下OC的反射机制；
   运行时选择创建哪个实例，并动态选择调用哪个方法
2、block的实质是什么？有几种block？分别是怎样产生的？
struct Block_descriptor {
unsigned long int reserved;
unsigned long int size;
void (*copy)(void *dst, void *src);
void (*dispose)(void *);
};

struct Block_layout {
void *isa;
int flags;
int reserved;
void (*invoke)(void *, ...);
struct Block_descriptor *descriptor;
/* Imported variables. */

Clang（LLVM编译器）将含有Block语法的源代码转换为我们可读源代码的功能。通过“-rewrite-objc”选项就能将含有Block语法的源代码变换为C++的源代码（本质是使用了struct结构的C语言源代码）
而Block实质上就是Objective-C对象;
根据isa指针，block一共有3种类型的block

_NSConcreteGlobalBlock 全局静态
_NSConcreteStackBlock 保存在栈中，出函数作用域就销毁
_NSConcreteMallocBlock 保存在堆中，retainCount == 0销毁而ARC和MRC中，还略有不同;

Block的类型

_NSConcreteStackBlock: 存储在栈区，需要截取变量
_NSConcreteGlobalBlock: 1.存储在程序数据区域，2.不需要截取变量
_NSConcreteMallocBlock: 存储在堆区

3、__block修饰的变量为什么能在block里面能改变其值？
    我们发现val变量居然变成了结构体实例__Block_byref_val_0，既在栈上生成了__Block_byref_val_0结构体实例，且初始化为10
    找到Block下面的val变量，拿出val变量的__forwarding指向的val变量，拿出val变量下的val值赋值。如果Block此时在栈区，那么__forwarding指向val变量自己。
    copy到堆后：__forwarding指向堆区的val变量
4、说一下线程之间的通信。
    
5、你们应用的崩溃率是多少？
6、说一下hash算法。
7、NSDictionary的实现原理是什么？
8、你们的App是如何处理本地数据安全的（比如用户名的密码）？
9、遇到过BAD_ACCESS的错误吗？你是怎样调试的？
10、什么是指针常量和常量指针？
11、不借用第三个变量，如何交换两个变量的值？要求手动写出交换过程。
12、若你去设计一个通知中心，你会怎样设计？
13、如何去设计一个方案去应对后端频繁更改的字段接口？
14、KVO、KVC的实现原理
15、用递归算法求1到n的和
16、category为什么不能添加属性？
17、说一下runloop和线程的关系。
18、说一下autoreleasePool的实现原理。
19、说一下简单工厂模式，工厂模式以及抽象工厂模式？
20、如何设计一个网络请求库？
21、说一下多线程，你平常是怎么用的？
22、说一下UITableViewCell的卡顿你是怎么优化的？
23、看过哪些三方库？说一下实现原理以及好在哪里？
24、说一下HTTP协议以及经常使用的code码的含义。
25、设计一套缓存策略。
26、设计一个检测主线和卡顿的方案。
27、说一下runtime，工作是如何使用的？看过runtime源码吗？
28、说几个你在工作中使用到的线程安全的例子。
29、用过哪些锁？哪些锁的性能比较高？
30、说一下HTTP和HTTPs的请求过程？
31、说一下TCP和UDP
32、说一下静态库和动态库之间的区别
33、load和initialize方法分别在什么时候调用的？
34、NSNotificationCenter是在哪个线程发送的通知？
35、用过swift吗？如果没有，平常有学习吗？
36、说一下你对架构的理解？
37、为什么一定要在主线程里面更新UI？
